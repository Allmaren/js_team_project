{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAIMC,EAAYC,SAASC,cAAc,oBACnCC,EAAYF,SAASC,cAAc,sBACnCE,EAAUH,SAASC,cAAc,oBACjCG,EAAiBJ,SAASC,cAAc,gBACxCI,EAAoBL,SAASC,cAAc,gBAC3CK,EAAkBN,SAASC,cAAc,cAEzCM,EAAU,UAGhBL,EAAUM,iBAAiB,SAsB3B,WACOC,GAGHJ,EAAkBK,UAAUC,IAAI,uBAChCL,EAAgBI,UAAUE,OAAO,uBACjCC,EAAUC,EAAAC,iBAAkBN,EAAQF,KAJpC,EAAAS,EAAAC,gB,IAvBJd,EAAQK,iBAAiB,SA+BzB,WACOC,GAGHJ,EAAkBK,UAAUE,OAAO,uBACnCN,EAAgBI,UAAUC,IAAI,uBAC9BE,EAAUC,EAAAI,eAAgBT,EAxCf,YAoCX,EAAAO,EAAAC,gB,IA/BJ,IAAMR,EAASU,KAAKC,MAAMC,aAAaC,QAAQ,YAE/C,GAAKb,EAaHJ,EAAkBK,UAAUC,IAAI,uBAChCE,EAAUC,EAAAC,iBAAkBN,EAAQF,OAdzB,CACX,IAAIgB,EAAsBvB,SAASwB,cAAc,KACjDD,EAAoBE,UAAY,4BAChCF,EAAoBG,UAClB,uEACFtB,EAAeuB,OAAOJ,GACtBK,YAAW,W,OAAML,EAAoBX,Q,GAAU,KAE/Cb,EAAU2B,UAAY,GAGtB3B,EAAU8B,mBAAmB,YAD3B,wE,UA2BWhB,EAAUiB,EAAYC,EAAQC,G,OAA9BC,EAASC,MAAAC,KAAAC,U,UAATH,I,OAAAA,EAAfI,EAAAxC,EAAA,CAAAwC,EAAAC,GAAAC,MAAA,SAAAC,EAAyBV,EAAYC,EAAQC,G,IACrCS,EAIAC,EAKEC,EAWCC,EAIAC,E,yEAJTD,EAAA,SAA4BE,GAC1B/C,EAAU8B,mBAAmB,YAAagB,EAAkBC,G,EAG9DD,EAAA,SAA2BE,G,IACzBC,EADyBD,EACzBC,eACAC,EAFyBF,EAEzBE,YACAC,EAHyBH,EAGzBG,aACAC,EAJyBJ,EAIzBI,GACAC,EALyBL,EAKzBK,aACAC,EANyBN,EAMzBM,OAEMC,EAAY,GAIlB,OAHAD,EAAOE,SAAQ,SAAAC,GACbF,EAAUG,KAAKD,EAAGE,K,IAEb,sFAOMC,OAHTV,EACI,kCAA8CU,OAAZV,GAClC,wBACL,YAAsCU,OAA5BX,EAAe,eAEKW,OAFQR,EAAG,wEAIhCQ,OAFqBX,EAAe,4DAM9CW,OAJUL,EACLM,MAAM,EAAG,GACTC,KAAI,SAAAL,G,OAAMA,C,IACVM,KAAK,OAEMH,OADhBL,EAAUS,OAAUT,EAAUS,OAAS,EAAI,UAAY,GAAM,WAC9D,mBAEKJ,OAFYP,EAAaQ,MAAM,EAAG,GAAG,oDAGtCD,OADCT,EAAeA,EAAac,QAAQ,GAAK,IAC1C,iC,WAvDgBlC,EAAWC,GAC/BkC,MAAK,SAAAC,G,OAAOA,C,IACZC,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,WAFxB3B,EAAQ8B,EAAAC,KAIR9B,EAAaD,EAASmB,MAAM,GAElC7D,EAAU2B,UAAY,GACI,IAAtBgB,EAAWqB,SACbhE,EAAU2B,UAAY,GAChBiB,EAAQ,sDAA4DgB,OAAN3B,EAAM,uBAC1EjC,EAAU8B,mBAAmB,YAAac,IAG5CD,EAAWmB,IAAG,W,MAACxB,EAAAxC,EAAA,CAAAwC,EAAAC,GAAAC,MAAA,SAAAkC,EAAMjB,G,IACbkB,E,kFAAiBC,EAAAC,QAAMC,IAC3B,sCAAyClB,OAAHH,EAAG,8C,OADrCkB,EAAQI,EAAAN,KAGd5B,EAAmB8B,EAASK,M,2DAJTvB,G,gCAAP,I,4CAdDvB,EAASC,MAAAC,KAAAC,U","sources":["src/js/library.js"],"sourcesContent":["import axios from 'axios';\nimport { onToggleModal } from './authentication';\nimport { allMoviesWatched, allMoviesQueue } from './services/firebase';\n\nconst libraryUl = document.querySelector('.my-library-list');\nconst watchedEL = document.querySelector('button.btn-watched');\nconst queueEl = document.querySelector('button.btn-queue');\nconst libraryWrapper = document.querySelector('.nav-library');\nconst currentWatchedBtn = document.querySelector('.btn-watched');\nconst currentQueueBtn = document.querySelector('.btn-queue');\n\nconst watched = 'watched';\nconst queque = 'queque';\n\nwatchedEL.addEventListener('click', getWatchedFilms);\nqueueEl.addEventListener('click', getQueueFilms);\n\nconst userId = JSON.parse(localStorage.getItem('user-id'));\n\nif (!userId) {\n  let notificationLibrary = document.createElement('p');\n  notificationLibrary.className = 'notification-update-movie';\n  notificationLibrary.innerHTML =\n    'To create your collections of movies you have to log in on Home page';\n  libraryWrapper.append(notificationLibrary);\n  setTimeout(() => notificationLibrary.remove(), 6000);\n\n  libraryUl.innerHTML = '';\n  const imgEl =\n    '<li class=\"library-photo-item\"><div class=\"library-photo\"></div></li>';\n  libraryUl.insertAdjacentHTML('beforeend', imgEl);\n} else {\n  currentWatchedBtn.classList.add('btn-library-current');\n  getMovies(allMoviesWatched, userId, watched);\n}\n\nfunction getWatchedFilms() {\n  if (!userId) {\n    onToggleModal();\n  } else {\n    currentWatchedBtn.classList.add('btn-library-current');\n    currentQueueBtn.classList.remove('btn-library-current');\n    getMovies(allMoviesWatched, userId, watched);\n  }\n}\n\nfunction getQueueFilms() {\n  if (!userId) {\n    onToggleModal();\n  } else {\n    currentWatchedBtn.classList.remove('btn-library-current');\n    currentQueueBtn.classList.add('btn-library-current');\n    getMovies(allMoviesQueue, userId, queque);\n  }\n}\n\nasync function getMovies(fetchFilms, userId, photo) {\n  const getFilms = await fetchFilms(userId)\n    .then(res => res)\n    .catch(error => console.log(error));\n\n  const arrayFilms = getFilms.slice(1);\n\n  libraryUl.innerHTML = '';\n  if (arrayFilms.length === 0) {\n    libraryUl.innerHTML = '';\n    const imgEl = `<li class=\"library-photo-item\"><div class=\"library-${photo}-photo\"></div></li>`;\n    libraryUl.insertAdjacentHTML('beforeend', imgEl);\n  }\n\n  arrayFilms.map(async el => {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${el}?api_key=1234dced32e7dcd076b4111d81f37c06`\n    );\n    renderLibraryFilms(response.data);\n  });\n\n  function renderLibraryFilms(object) {\n    libraryUl.insertAdjacentHTML('beforeend', createLibraryCard(object));\n  }\n\n  function createLibraryCard({\n    original_title,\n    poster_path,\n    vote_average,\n    id,\n    release_date,\n    genres,\n  }) {\n    const genreList = [];\n    genres.forEach(el => {\n      genreList.push(el.name);\n    });\n    return `\n    <li class=\"card-item\" >\n      <div class=\"card-item__img\">\n      <img src=\"${\n        poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : './images/no_image.jpg'\n      }\"  alt=\"${original_title}\" data-id=\"${id}\" loading=\"lazy\">\n      </div>\n      <h3 class=\"card-item__title\">${original_title}</h3>\n      <p class=\"card-item__info\">\n        <span>${genreList\n          .slice(0, 2)\n          .map(el => el)\n          .join(', ')}${\n      genreList.length ? (genreList.length > 2 ? ', Other' : '') : 'No genre'\n    } </span> <span>${release_date.slice(0, 4)}</span>\n        <span class=\"card-item__vote\"> ${\n          vote_average ? vote_average.toFixed(1) : '0'\n        }</span>\n      </p>\n    </li>`;\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$93effc6fc56091ad$var$libraryUl","document","querySelector","$93effc6fc56091ad$var$watchedEL","$93effc6fc56091ad$var$queueEl","$93effc6fc56091ad$var$libraryWrapper","$93effc6fc56091ad$var$currentWatchedBtn","$93effc6fc56091ad$var$currentQueueBtn","$93effc6fc56091ad$var$watched","addEventListener","$93effc6fc56091ad$var$userId","classList","add","remove","$93effc6fc56091ad$var$getMovies","$eafjv","allMoviesWatched","$95ECi","onToggleModal","allMoviesQueue","JSON","parse","localStorage","getItem","$93effc6fc56091ad$var$notificationLibrary","createElement","className","innerHTML","append","setTimeout","insertAdjacentHTML","fetchFilms","userId1","photo","$93effc6fc56091ad$var$_getMovies","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee1","getFilms","arrayFilms","imgEl","renderLibraryFilms","createLibraryCard","object","param","original_title","poster_path","vote_average","id","release_date","genres","genreList","forEach","el","push","name","concat","slice","map","join","length","toFixed","then","res","catch","error","console","log","_ctx1","sent","_callee","response","$dIxxU","default","get","_ctx","data"],"version":3,"file":"library.7c80528e.js.map"}